<?php

/**
 * The admin-specific functionality of the plugin.
 *
 * @link       https://dayzsolutions.com
 * @since      1.0.0
 *
 * @package    Zearch
 * @subpackage Zearch/admin
 */

/**
 * The admin-specific functionality of the plugin.
 *
 * Defines the plugin name, version, and two examples hooks for how to
 * enqueue the admin-specific stylesheet and JavaScript.
 *
 * @package    Zearch
 * @subpackage Zearch/admin
 * @author     DayZ Solutions <info@dayzsolutions.com>
 */
class Zearch_Admin {

	/**
	 * The ID of this plugin.
	 *
	 * @since    1.0.0
	 * @access   private
	 * @var      string    $plugin_name    The ID of this plugin.
	 */
	private $plugin_name;

	/**
	 * The version of this plugin.
	 *
	 * @since    1.0.0
	 * @access   private
	 * @var      string    $version    The current version of this plugin.
	 */
	private $version;

	/**
	 * Initialize the class and set its properties.
	 *
	 * @since    1.0.0
	 * @param      string    $plugin_name       The name of this plugin.
	 * @param      string    $version    The version of this plugin.
	 */
	public function __construct( $plugin_name, $version) {

		$this->plugin_name = $plugin_name;
		$this->version = $version;

	}

	/**
	 * Register the stylesheets for the admin area.
	 *
	 * @since    1.0.0
	 */
	public function enqueue_styles() {

		/**
		 * This function is provided for demonstration purposes only.
		 *
		 * An instance of this class should be passed to the run() function
		 * defined in Zearch_Loader as all of the hooks are defined
		 * in that particular class.
		 *
		 * The Zearch_Loader will then create the relationship
		 * between the defined hooks and the functions defined in this
		 * class.
		 */

		wp_enqueue_style( $this->plugin_name, plugin_dir_url( __FILE__ ) . 'css/zearch-admin.css', array(), $this->version, 'all' );

	}

	/**
	 * Register the JavaScript for the admin area.
	 *
	 * @since    1.0.0
	 */
	public function enqueue_scripts() {

		/**
		 * This function is provided for demonstration purposes only.
		 *
		 * An instance of this class should be passed to the run() function
		 * defined in Zearch_Loader as all of the hooks are defined
		 * in that particular class.
		 *
		 * The Zearch_Loader will then create the relationship
		 * between the defined hooks and the functions defined in this
		 * class.
		 */

		wp_enqueue_script( $this->plugin_name, plugin_dir_url( __FILE__ ) . 'js/zearch-admin.js', array( 'jquery' ), $this->version, false );

	}


}
/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class DayZearch {
	private $dayzearch_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'dayzearch_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'dayzearch_page_init' ) );
	}

	public function dayzearch_add_plugin_page() {
		add_menu_page(
			'DayZearch', // page_title
			'DayZearch', // menu_title
			'manage_options', // capability
			'dayzearch', // menu_slug
			array( $this, 'dayzearch_create_admin_page' ), // function
			'dashicons-search', // icon_url
			80 // position
		);
	}

	public function dayzearch_create_admin_page() {
		$this->dayzearch_options = get_option( 'dayzearch_option_name' ); ?>

		<div class="wrap">
			<h2>DayZearch</h2>
			<p></p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'dayzearch_option_group' );
					do_settings_sections( 'dayzearch-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function dayzearch_page_init() {
		register_setting(
			'dayzearch_option_group', // option_group
			'dayzearch_option_name', // option_name
			array( $this, 'dayzearch_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'dayzearch_setting_section', // id
			'Settings', // title
			array( $this, 'dayzearch_section_info' ), // callback
			'dayzearch-admin' // page
		);

		add_settings_field(
			'post_title_0', // id
			'Post Title', // title
			array( $this, 'post_title_0_callback' ), // callback
			'dayzearch-admin', // page
			'dayzearch_setting_section' // section
		);
	}

	public function dayzearch_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['post_title_0'] ) ) {
			$sanitary_values['post_title_0'] = $input['post_title_0'];
		}

		return $sanitary_values;
	}

	public function dayzearch_section_info() {
		
	}

	public function post_title_0_callback() {
		?> <fieldset><?php $checked = ( isset( $this->dayzearch_options['post_title_0'] ) && $this->dayzearch_options['post_title_0'] === 'Searchable' ) ? 'checked' : '' ; ?>
		<label for="post_title_0-0"><input type="radio" name="dayzearch_option_name[post_title_0]" id="post_title_0-0" value="Searchable" <?php echo $checked; ?>> Searchable</label></fieldset> <?php
	}

}
if ( is_admin() )
	$dayzearch = new DayZearch();

/* 
 * Retrieve this value with:
 * $dayzearch_options = get_option( 'dayzearch_option_name' ); // Array of All Options
 * $post_title_0 = $dayzearch_options['post_title_0']; // Post Title
 */
